<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Scoop&amp;Chocolatey不完全上手指南</title>
      <link href="/posts/cd19d6b5.html"/>
      <url>/posts/cd19d6b5.html</url>
      
        <content type="html"><![CDATA[<h2 id="Scoop"><a href="#Scoop" class="headerlink" title="Scoop"></a>Scoop</h2><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h3><p><a href="https://github.com/lukesampson/scoop">Scoop</a>是一个 Windows 包管理工具，类似于 Debian 的 <code>apt</code>、macOS 的 <code>homebrew</code>。它由开源社区驱动，体验可能是是目前所有 Windows 包管理工具中最好的。对开发者来说，包管理器能非常方便的部署开发环境，比如 Python、Node.js。而对于普通的计算机使用者来说，可以方便的安装一些常用软件，尤其是开源软件，免去了手动去官网下载的繁琐步骤，而且后续对软件进行升级只需要输入一行命令，非常便捷。</p><h3 id="2-环境要求"><a href="#2-环境要求" class="headerlink" title="2.环境要求"></a>2.环境要求</h3><ul><li>  Windows 7 SP1 + / Windows Server 2008 +</li><li>  <a href="https://www.microsoft.com/en-us/download/details.aspx?id=54616">PowerShell 5 + </a>和<a href="https://dotnet.microsoft.com/download">.NET Framework 4.5 + </a></li><li>  Windows 用户名为英文（Windows 用户环境变量中路径值不支持中文字符）</li><li>  <strong>正常、快速</strong>的访问<a href="https://github.com/">GitHub</a>并下载资源</li></ul><h3 id="3-Scoop安装"><a href="#3-Scoop安装" class="headerlink" title="3.Scoop安装"></a>3.Scoop安装</h3><ol><li>设置<code>powershell</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-executionpolicy remotesigned -scope currentuser</span><br></pre></td></tr></table></figure><ul><li>默认安装(安装到<code>C:\Users\&lt;user&gt;\scoop</code>), 在<code>powershell</code>里面运行:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><ul><li>安装到指定目录(<code>D:\tool\scoop</code>)(逐行执行命令)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[environment]::setEnvironmentVariable(&#x27;SCOOP&#x27;, &#x27;D:\tool\scoop&#x27;, &#x27;User&#x27;)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">env:SCOOP=<span class="string">&#x27;D:\tool\scoop&#x27;</span></span></span><br><span class="line"></span><br><span class="line">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><ul><li>全局安装到指定目录(<code>D:\tool\scoop_global</code>)(逐行执行命令)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[environment]::setEnvironmentVariable(&#x27;SCOOP_GLOBAL&#x27;,&#x27;D:\tool\scoop\scoop_global&#x27;,&#x27;Machine&#x27;)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">env:SCOOP_GLOBAL=<span class="string">&#x27;D:\tool\scoop\scoop_global&#x27;</span></span></span><br><span class="line"></span><br><span class="line">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><ul><li>执行<code>scoop help</code>查看是否安装成功</li></ul><h3 id="4-基础使用"><a href="#4-基础使用" class="headerlink" title="4.基础使用"></a>4.基础使用</h3><ul><li>  <code>scoop search &lt;app&gt;</code> - 搜索软件</li><li>  <code>scoop install &lt;app&gt;</code> - 安装软件</li><li>  <code>scoop info &lt;app&gt;</code> - 查看软件详细信息</li><li>  <code>scoop list</code> - 查看已安装软件</li><li>  <code>scoop uninstall &lt;app&gt;</code> - 卸载软件，<code>-p</code>删除配置文件。</li><li>  <code>scoop update</code> - 更新 scoop 本体和软件列表</li><li>  <code>scoop update &lt;app&gt;</code> - 更新指定软件</li><li>  <code>scoop update *</code> - 更新所有已安装的软件</li><li>  <code>scoop checkup</code> - 检查 scoop 的问题并给出解决问题的建议</li><li>  <code>scoop help</code> - 查看命令列表</li><li>  <code>scoop help &lt;command&gt;</code> - 查看命令帮助说明</li></ul><h3 id="5-进阶使用"><a href="#5-进阶使用" class="headerlink" title="5.进阶使用"></a>5.进阶使用</h3><h4 id="5-1-添加常用的bucket"><a href="#5-1-添加常用的bucket" class="headerlink" title="5.1.添加常用的bucket"></a>5.1.添加常用的bucket</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add extras</span><br><span class="line">scoop bucket add Java</span><br><span class="line">scoop bucket add versions</span><br><span class="line">scoop bucket add Ash258 &#x27;https://github.com/Ash258/Scoop-Ash258.git&#x27;</span><br><span class="line">scoop bucket add dorado &#x27;https://github.com/h404bi/dorado&#x27;</span><br><span class="line">scoop bucket add iszy &#x27;https://github.com/ZvonimirSun/scoop-iszy&#x27;</span><br><span class="line">scoop bucket add dodorz &#x27;https://github.com/dodorz/scoop-bucket&#x27;</span><br><span class="line">scoop bucket add rasa &#x27;https://github.com/rasa/scoops&#x27;</span><br><span class="line">scoop bucket add scoopet &#x27;https://github.com/integzz/scoopet&#x27;</span><br><span class="line">scoop bucket add raresoft &#x27;https://github.com/L-Trump/scoop-raresoft&#x27;</span><br><span class="line">scoop bucket add main &#x27;https://github.com/ScoopInstaller/Main&#x27;</span><br><span class="line">scoop bucket add games &#x27;https://github.com/Calinou/scoop-games&#x27;</span><br><span class="line">scoop bucket add jetbrains &#x27;https://github.com/Ash258/Scoop-JetBrains&#x27;</span><br></pre></td></tr></table></figure><h4 id="5-2-清理安装包缓存"><a href="#5-2-清理安装包缓存" class="headerlink" title="5.2.清理安装包缓存"></a>5.2.清理安装包缓存</h4><p>Scoop 会保留下载的安装包，对于卸载后又想再安装的情况，不需要重复下载。但长期累积会占用大量的磁盘空间，如果用不到就成了垃圾。这时可以使用 <code>scoop cache</code> 命令来清理。</p><ul><li>  <code>scoop cache show</code> - 显示安装包缓存</li><li>  <code>scoop cache rm &lt;app&gt;</code> - 删除指定应用的安装包缓存</li><li>  <code>scoop cache rm *</code> - 删除所有的安装包缓存</li></ul><p>如果你不希望安装和更新软件时保留安装包缓存，可以加上 <code>-k</code> 或 <code>--no-cache</code> 选项来禁用缓存：(可能会有报错)</p><ul><li>  <code>scoop install -k &lt;app&gt;</code></li><li>  <code>scoop update -k *</code></li></ul><h4 id="5-3-删除旧版本软件"><a href="#5-3-删除旧版本软件" class="headerlink" title="5.3.删除旧版本软件"></a>5.3.删除旧版本软件</h4><p>当软件被更新后 Scoop 还会保留软件的旧版本，更新软件后可以通过 <code>scoop cleanup</code> 命令进行删除。</p><ul><li>  <code>scoop cleanup &lt;app&gt;</code> - 删除指定软件的旧版本</li><li>  <code>scoop cleanup *</code> - 删除所有软件的旧版本</li></ul><p>与安装软件一样，删除旧版本软件的同时也可以清理安装包缓存，同样是加上 <code>-k</code> 选项。</p><ul><li>  <code>scoop cleanup -k &lt;app&gt;</code> - 删除指定软件的旧版本并清除安装包缓存</li><li>  <code>scoop cleanup -k *</code> - 删除所有软件的旧版本并清除安装包缓存</li></ul><h4 id="5-4-全局安装-一般用于环境安装"><a href="#5-4-全局安装-一般用于环境安装" class="headerlink" title="5.4.全局安装(一般用于环境安装)"></a>5.4.全局安装(一般用于环境安装)</h4><p>全局安装就是给系统中的所有用户都安装，且环境变量是系统变量，对于需要设置系统变量的一些软件就需要全局安装，比如 Node.js、Python，否则某些情况会出现无法找到命令的问题。</p><p>使用 <code>scoop install &lt;app&gt;</code> 命令加上 <code>-g</code> 或 <code>--global</code> 选项可对软件进行全局安装，全局安装需要管理员权限，所以需要提前以管理员权限运行的 PowerShell 。更简单的方式是先安装 <code>sudo</code>，然后用 <code>sudo</code> 命令来提权执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scoop install sudo</span><br><span class="line">sudo scoop install -g &lt;app&gt;</span><br></pre></td></tr></table></figure><p>使用 <code>scoop list</code> 命令查看已装软件时，全局安装的软件末尾会有 <code>*global*</code> 标志。</p><p>此外对于全局软件的更新和卸载等其它操作，都需要加上 <code>-g</code> 选项：</p><ul><li>  <code>sudo scoop update -g *</code> - 更新所有软件（且包含全局软件）</li><li>  <code>sudo scoop uninstall -g &lt;app&gt;</code> - 卸载全局软件</li><li>  <code>sudo scoop uninstall -gp &lt;app&gt;</code> - 卸载全局软件（并删除配置文件）</li><li>  <code>sudo scoop cleanup -g *</code> - 删除所有全局软件的旧版本</li><li>  <code>sudo scoop cleanup -gk *</code> - 删除所有全局软件的旧版本（并清除安装包包缓存）</li></ul><h4 id="5-5-代理设置"><a href="#5-5-代理设置" class="headerlink" title="5.5.代理设置"></a>5.5.代理设置</h4><p>Scoop 默认使用系统代理，手动指定代理，可以输入下面的命令。需要注意的是只支持 http 协议。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config proxy localhost:端口号</span><br></pre></td></tr></table></figure><blockquote><p>设置完可以通过<code>scoop config proxy</code>查看。</p></blockquote><p>如果你想取消代理，那么输入下面的命令，这将会恢复使用系统代理。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config rm proxy</span><br></pre></td></tr></table></figure><h4 id="5-6-常用命令总结"><a href="#5-6-常用命令总结" class="headerlink" title="5.6.常用命令总结"></a>5.6.常用命令总结</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 安装软件 ##</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 非全局安装（并禁止安装包缓存）</span></span><br><span class="line">scoop install -k &lt;app&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 全局安装（并禁止安装包缓存）</span></span><br><span class="line">sudo scoop install -gk &lt;app&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 卸载软件 ##</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载非全局软件（并删除配置文件）</span></span><br><span class="line">scoop uninstall -p &lt;app&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载全局软件（并删除配置文件）</span></span><br><span class="line">sudo scoop uninstall -gp &lt;app&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 更新软件 ##</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新所有非全局软件（并禁止安装包缓存）</span></span><br><span class="line">scoop update -k *</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新所有软件（并禁止安装包缓存）</span></span><br><span class="line">sudo scoop update -gk *</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 垃圾清理 ##</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有旧版本非全局软件（并删除软件包缓存）</span></span><br><span class="line">scoop cleanup -k *</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有旧版本软件（并删除软件包缓存）</span></span><br><span class="line">sudo scoop cleanup -gk *</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除软件包缓存</span></span><br><span class="line">scoop cache rm *</span><br></pre></td></tr></table></figure><h4 id="5-7-重装系统后如何恢复使用Scoop"><a href="#5-7-重装系统后如何恢复使用Scoop" class="headerlink" title="5.7.重装系统后如何恢复使用Scoop"></a>5.7.重装系统后如何恢复使用Scoop</h4><p>重装系统之后, 如果把原有的scoop文件夹粘贴回去user文件夹,然后在<code>powershell</code>中再次输入安装命令,会得到一个<strong>Scoop is already installed</strong>错误,要想正确恢复scoop,根据<a href="https://github.com/lukesampson/scoop/issues/2894">官方回答</a>,请按照以下步骤:</p><ol><li><p>重装系统之前,先完整复制用户目录下的scoop文件夹到别的地方</p></li><li><p>重装系统之后,将scoop文件夹粘贴回去用户目录</p></li><li><p>在环境变量设置中,新建一个用户变量,名字为SCOOP,值为当前scoop文件夹的地址,即:<br><code>C:\Users\xxxx\scoop</code></p></li><li><p>允许脚本执行:<br><code>set-executionpolicy remotesigned -s currentuser</code></p></li><li><p>双击用户变量中的path,新建一个路径,填入 :<br><code>%SCOOP%\shims</code></p></li><li><p>管理员权限powershell中运行:<br><code>scoop reset *</code></p></li></ol><p>即可恢复所有软件的正常使用.</p><h3 id="6-尾巴"><a href="#6-尾巴" class="headerlink" title="6.尾巴"></a>6.尾巴</h3><ul><li><a href="https://scoop.netlify.app/">Scoop</a></li><li><a href="https://github.com/lukesampson/scoop/wiki">Home · lukesampson/scoop Wiki · GitHub</a></li></ul><hr><h2 id="Chocolatey"><a href="#Chocolatey" class="headerlink" title="Chocolatey"></a>Chocolatey</h2><h3 id="1-关于Chocolatey"><a href="#1-关于Chocolatey" class="headerlink" title="1.关于Chocolatey"></a>1.关于Chocolatey</h3><p><a href="https://chocolatey.org/">Chocolatey</a>是Windows平台上的包管理器，通过它可以集中安装、管理、更新各种各样的软件。类似<a href="https://github.com/lukesampson/scoop">Scoop</a>，相比而言Scoop对环境的污染较小（软件都安装在<code>C:\Users\xxx\scoop\apps</code>下），Chocolatey安装的包会在默认路径下，也就是<code>C:\Program Files</code>目录下。故将Chocolatey作为备选项。</p><h3 id="2-Chocolatey的安装-建议使用PowerShell"><a href="#2-Chocolatey的安装-建议使用PowerShell" class="headerlink" title="2.Chocolatey的安装(建议使用PowerShell)"></a>2.Chocolatey的安装(建议使用PowerShell)</h3><p>考虑到这篇文章的信息会过时，安装的详细信息可依照<a href="https://chocolatey.org/install">官方指示</a>。</p><ul><li>cmd(管理员权限运行)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@”%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe” -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command “iex ((New-Object System.Net.WebClient).DownloadString(‘https://chocolatey.org/install.ps1’))” &amp;&amp; SET “PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin”</span><br></pre></td></tr></table></figure><ul><li>Windows PowerShell(管理员权限运行)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://community.chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure><ul><li>执行<code>choco</code>查看是否安装成功</li></ul><h3 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#安装包</span></span></span><br><span class="line">choco install &lt;package&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">如果使用 -version 可以指定版本</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看安装的包</span></span></span><br><span class="line">choco list -l</span><br><span class="line">choco list -local-only</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#包的更新，包括chocolatey本身</span></span></span><br><span class="line">choco upgrade &lt;packagename&gt; or all</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#包的卸载</span></span></span><br><span class="line">choco uninstall &lt;packagename&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#包的搜索(可在官网先搜索(https://community.chocolatey.org/packages))</span></span></span><br><span class="line">choco search &lt;packagename&gt;</span><br></pre></td></tr></table></figure><h3 id="4-尾巴"><a href="#4-尾巴" class="headerlink" title="4.尾巴"></a>4.尾巴</h3><p>  国内建议使用Scoop（限速），Chocolatey已无法访问，若使用黑科技，可两者结合使用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于我思故我在</title>
      <link href="/posts/f729cd9d.html"/>
      <url>/posts/f729cd9d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Je pense, donc je suis<br>-René Descartes</p></blockquote><h3 id="1-什么是我思故我在"><a href="#1-什么是我思故我在" class="headerlink" title="1.什么是我思故我在"></a>1.什么是我思故我在</h3><p>著名哲学家笛卡尔提出了一个广为人知的命题：“<a href="https://baike.baidu.com/item/%E6%88%91%E6%80%9D%E6%95%85%E6%88%91%E5%9C%A8/341083">我思故我在</a>”，而他提出这句命题的目的，是在对一切事物（过往、现成的理论体系乃至思维前提）进行普遍怀疑的基础上，探寻那个无法被怀疑的根本依据和基本前提。</p><p>笛卡尔这句话最普遍的解释：“我唯一可以确定的事就是我自己思想的存在,因为当我怀疑其他时，我无法同时怀疑我本身的思想”。比较权威的一种解释是：“我无法否认自己的存在，因为当我否认、怀疑时，我就已经存在。”因为我在思考在怀疑的时候，肯定有一个执行“思考”的“思考者”，这个作为主体的“我”是不容怀疑的，这个我并非广延的肉体的“我”，而是思维者的我。所以，否认自己的存在是自相矛盾的。</p><h3 id="2-理解的局限"><a href="#2-理解的局限" class="headerlink" title="2.理解的局限"></a>2.理解的局限</h3><p>“我思故我在”作为启迪智慧的著名思想命题，在我国高中政治教科书内被视为“主观唯心主义”的观点之一，也被某些唯物论者长期批判。其实有很重要的一点，许多人或许没有意识到，那就是：<strong>学习哲学的过程中，不要先存以马克思主义的见解而去看待评价哲学史上的一切哲学。</strong></p><p>哲学更多的是以理论的方式进行表征的时代精神的精华，以理性批判著称的文明活的灵魂。科学性、革命性、批判性不仅仅是马克思主义哲学的特征，也是作为思想武器和理论工具的一切进步哲学所具备的典型特征。可以通过辩证的眼光，以马克思主义哲学中的合理内核和精华部分作为研究方法，去进行哲学理论的研究和批判。或许只有将其正确地灵活运用于实践活动中，才能使其焕发出该有的生机。</p><h3 id="3-存在"><a href="#3-存在" class="headerlink" title="3.存在"></a>3.存在</h3><p>我思故我在实际上是一个深刻的思想实验得到的结果。这个实验的起源是一个问题：这个世界上哪些东西是客观存在的，哪些东西是虚假的幻境？笛卡尔假设世界上有一个魔鬼，可以欺骗我们的感觉，在我们眼前制造实际不存在的幻境（可参照<a href="https://baike.baidu.com/item/%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD/34564">黑客帝国</a>理解）。</p><p>那么我们如何才能辨别这个世界上哪些东西是真实的，哪些东西是魔鬼制造的幻觉？思考的结果是，我们所看到的，听到的，感觉到的一切东西，都有可能是魔鬼制作的幻觉，是不存在的假象。甚至我们的身体，也有可能不是真实的。唯一能确定真实存在的，只有一个：那就是“我”的思想，因为“我的思想”是这个思维实验的实施者，而这个思维实验已经进行了，所以“我的思想”必然是真实存在的。这个思想实验是笛卡尔的认识论的基础，也构成了现代哲学的基石。</p><p>黑客帝国，攻壳机动队，盗梦空间，穆赫兰道等，没有笛卡尔或许也不会有这一类电影。</p><h3 id="4-尾巴"><a href="#4-尾巴" class="headerlink" title="4.尾巴"></a>4.尾巴</h3><p><a href="https://baike.baidu.com/item/%E8%B4%B9%E7%B1%B3%E6%82%96%E8%AE%BA/10937023">费米悖论</a>的一种可能性：</p><blockquote><p>我们对于现实的理解是完全错误的。有很多种可能性导致我们对于所有一切的想法都是错的。宇宙可能只是个投影，或者我们就是外星人，而只是被投放在地球做实验小白鼠的。甚至我们和黑客帝国里面一样，只是活在电脑的模拟现实中，而程序员忘了写其它物种的代码。</p></blockquote><p>个人浅见仅供参考。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HELLO WORLD</title>
      <link href="/posts/d4a1185.html"/>
      <url>/posts/d4a1185.html</url>
      
        <content type="html"><![CDATA[<p>序</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
